// Mocks generated by Mockito 5.4.5 from annotations
// in petjournal/test/app/pet/controllers/all_pets_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:drift/drift.dart' as _i2;
import 'package:drift/src/runtime/executor/stream_queries.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:petjournal/constants/pet_sex.dart' as _i7;
import 'package:petjournal/constants/pet_status.dart' as _i8;
import 'package:petjournal/constants/weight_units.dart' as _i9;
import 'package:petjournal/data/database/database_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMigrationStrategy_0 extends _i1.SmartFake
    implements _i2.MigrationStrategy {
  _FakeMigrationStrategy_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$SpeciesTypesTable_1 extends _i1.SmartFake
    implements _i3.$SpeciesTypesTable {
  _Fake$SpeciesTypesTable_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$PetsTable_2 extends _i1.SmartFake implements _i3.$PetsTable {
  _Fake$PetsTable_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$PetMicrochipsTable_3 extends _i1.SmartFake
    implements _i3.$PetMicrochipsTable {
  _Fake$PetMicrochipsTable_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$PetMedsTable_4 extends _i1.SmartFake implements _i3.$PetMedsTable {
  _Fake$PetMedsTable_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$PetVaccinationsTable_5 extends _i1.SmartFake
    implements _i3.$PetVaccinationsTable {
  _Fake$PetVaccinationsTable_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$PetWeightsTable_6 extends _i1.SmartFake
    implements _i3.$PetWeightsTable {
  _Fake$PetWeightsTable_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$JournalEntriesTable_7 extends _i1.SmartFake
    implements _i3.$JournalEntriesTable {
  _Fake$JournalEntriesTable_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$JournalEntryTagsTable_8 extends _i1.SmartFake
    implements _i3.$JournalEntryTagsTable {
  _Fake$JournalEntryTagsTable_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$PetJournalEntriesTable_9 extends _i1.SmartFake
    implements _i3.$PetJournalEntriesTable {
  _Fake$PetJournalEntriesTable_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$SettingsTable_10 extends _i1.SmartFake
    implements _i3.$SettingsTable {
  _Fake$SettingsTable_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _Fake$DatabaseServiceManager_11 extends _i1.SmartFake
    implements _i3.$DatabaseServiceManager {
  _Fake$DatabaseServiceManager_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamQueryUpdateRules_12 extends _i1.SmartFake
    implements _i2.StreamQueryUpdateRules {
  _FakeStreamQueryUpdateRules_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDriftDatabaseOptions_13 extends _i1.SmartFake
    implements _i2.DriftDatabaseOptions {
  _FakeDriftDatabaseOptions_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGeneratedDatabase_14 extends _i1.SmartFake
    implements _i2.GeneratedDatabase {
  _FakeGeneratedDatabase_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseConnection_15 extends _i1.SmartFake
    implements _i2.DatabaseConnection {
  _FakeDatabaseConnection_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQueryExecutor_16 extends _i1.SmartFake implements _i2.QueryExecutor {
  _FakeQueryExecutor_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamQueryStore_17 extends _i1.SmartFake
    implements _i4.StreamQueryStore {
  _FakeStreamQueryStore_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDatabaseConnectionUser_18 extends _i1.SmartFake
    implements _i2.DatabaseConnectionUser {
  _FakeDatabaseConnectionUser_18(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSetting_19 extends _i1.SmartFake implements _i3.Setting {
  _FakeSetting_19(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMigrator_20 extends _i1.SmartFake implements _i2.Migrator {
  _FakeMigrator_20(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFuture_21<T1> extends _i1.SmartFake implements _i5.Future<T1> {
  _FakeFuture_21(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInsertStatement_22<T1 extends _i2.Table, D1> extends _i1.SmartFake
    implements _i2.InsertStatement<T1, D1> {
  _FakeInsertStatement_22(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeUpdateStatement_23<T extends _i2.Table, D> extends _i1.SmartFake
    implements _i2.UpdateStatement<T, D> {
  _FakeUpdateStatement_23(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSimpleSelectStatement_24<T1 extends _i2.HasResultSet, D>
    extends _i1.SmartFake
    implements _i2.SimpleSelectStatement<T1, D> {
  _FakeSimpleSelectStatement_24(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJoinedSelectStatement_25<FirstT extends _i2.HasResultSet, FirstD>
    extends _i1.SmartFake
    implements _i2.JoinedSelectStatement<FirstT, FirstD> {
  _FakeJoinedSelectStatement_25(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeBaseSelectStatement_26<Row> extends _i1.SmartFake
    implements _i2.BaseSelectStatement<Row> {
  _FakeBaseSelectStatement_26(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDeleteStatement_27<T1 extends _i2.Table, D1> extends _i1.SmartFake
    implements _i2.DeleteStatement<T1, D1> {
  _FakeDeleteStatement_27(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSelectable_28<T> extends _i1.SmartFake implements _i2.Selectable<T> {
  _FakeSelectable_28(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGenerationContext_29 extends _i1.SmartFake
    implements _i2.GenerationContext {
  _FakeGenerationContext_29(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [DatabaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseService extends _i1.Mock implements _i3.DatabaseService {
  MockDatabaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get schemaVersion =>
      (super.noSuchMethod(Invocation.getter(#schemaVersion), returnValue: 0)
          as int);

  @override
  _i2.MigrationStrategy get migration =>
      (super.noSuchMethod(
            Invocation.getter(#migration),
            returnValue: _FakeMigrationStrategy_0(
              this,
              Invocation.getter(#migration),
            ),
          )
          as _i2.MigrationStrategy);

  @override
  _i3.$SpeciesTypesTable get speciesTypes =>
      (super.noSuchMethod(
            Invocation.getter(#speciesTypes),
            returnValue: _Fake$SpeciesTypesTable_1(
              this,
              Invocation.getter(#speciesTypes),
            ),
          )
          as _i3.$SpeciesTypesTable);

  @override
  _i3.$PetsTable get pets =>
      (super.noSuchMethod(
            Invocation.getter(#pets),
            returnValue: _Fake$PetsTable_2(this, Invocation.getter(#pets)),
          )
          as _i3.$PetsTable);

  @override
  _i3.$PetMicrochipsTable get petMicrochips =>
      (super.noSuchMethod(
            Invocation.getter(#petMicrochips),
            returnValue: _Fake$PetMicrochipsTable_3(
              this,
              Invocation.getter(#petMicrochips),
            ),
          )
          as _i3.$PetMicrochipsTable);

  @override
  _i3.$PetMedsTable get petMeds =>
      (super.noSuchMethod(
            Invocation.getter(#petMeds),
            returnValue: _Fake$PetMedsTable_4(
              this,
              Invocation.getter(#petMeds),
            ),
          )
          as _i3.$PetMedsTable);

  @override
  _i3.$PetVaccinationsTable get petVaccinations =>
      (super.noSuchMethod(
            Invocation.getter(#petVaccinations),
            returnValue: _Fake$PetVaccinationsTable_5(
              this,
              Invocation.getter(#petVaccinations),
            ),
          )
          as _i3.$PetVaccinationsTable);

  @override
  _i3.$PetWeightsTable get petWeights =>
      (super.noSuchMethod(
            Invocation.getter(#petWeights),
            returnValue: _Fake$PetWeightsTable_6(
              this,
              Invocation.getter(#petWeights),
            ),
          )
          as _i3.$PetWeightsTable);

  @override
  _i3.$JournalEntriesTable get journalEntries =>
      (super.noSuchMethod(
            Invocation.getter(#journalEntries),
            returnValue: _Fake$JournalEntriesTable_7(
              this,
              Invocation.getter(#journalEntries),
            ),
          )
          as _i3.$JournalEntriesTable);

  @override
  _i3.$JournalEntryTagsTable get journalEntryTags =>
      (super.noSuchMethod(
            Invocation.getter(#journalEntryTags),
            returnValue: _Fake$JournalEntryTagsTable_8(
              this,
              Invocation.getter(#journalEntryTags),
            ),
          )
          as _i3.$JournalEntryTagsTable);

  @override
  _i3.$PetJournalEntriesTable get petJournalEntries =>
      (super.noSuchMethod(
            Invocation.getter(#petJournalEntries),
            returnValue: _Fake$PetJournalEntriesTable_9(
              this,
              Invocation.getter(#petJournalEntries),
            ),
          )
          as _i3.$PetJournalEntriesTable);

  @override
  _i3.$SettingsTable get settings =>
      (super.noSuchMethod(
            Invocation.getter(#settings),
            returnValue: _Fake$SettingsTable_10(
              this,
              Invocation.getter(#settings),
            ),
          )
          as _i3.$SettingsTable);

  @override
  _i3.$DatabaseServiceManager get managers =>
      (super.noSuchMethod(
            Invocation.getter(#managers),
            returnValue: _Fake$DatabaseServiceManager_11(
              this,
              Invocation.getter(#managers),
            ),
          )
          as _i3.$DatabaseServiceManager);

  @override
  Iterable<_i2.TableInfo<_i2.Table, Object?>> get allTables =>
      (super.noSuchMethod(
            Invocation.getter(#allTables),
            returnValue: <_i2.TableInfo<_i2.Table, Object?>>[],
          )
          as Iterable<_i2.TableInfo<_i2.Table, Object?>>);

  @override
  List<_i2.DatabaseSchemaEntity> get allSchemaEntities =>
      (super.noSuchMethod(
            Invocation.getter(#allSchemaEntities),
            returnValue: <_i2.DatabaseSchemaEntity>[],
          )
          as List<_i2.DatabaseSchemaEntity>);

  @override
  _i2.StreamQueryUpdateRules get streamUpdateRules =>
      (super.noSuchMethod(
            Invocation.getter(#streamUpdateRules),
            returnValue: _FakeStreamQueryUpdateRules_12(
              this,
              Invocation.getter(#streamUpdateRules),
            ),
          )
          as _i2.StreamQueryUpdateRules);

  @override
  _i2.DriftDatabaseOptions get options =>
      (super.noSuchMethod(
            Invocation.getter(#options),
            returnValue: _FakeDriftDatabaseOptions_13(
              this,
              Invocation.getter(#options),
            ),
          )
          as _i2.DriftDatabaseOptions);

  @override
  _i2.GeneratedDatabase get attachedDatabase =>
      (super.noSuchMethod(
            Invocation.getter(#attachedDatabase),
            returnValue: _FakeGeneratedDatabase_14(
              this,
              Invocation.getter(#attachedDatabase),
            ),
          )
          as _i2.GeneratedDatabase);

  @override
  _i2.DatabaseConnection get connection =>
      (super.noSuchMethod(
            Invocation.getter(#connection),
            returnValue: _FakeDatabaseConnection_15(
              this,
              Invocation.getter(#connection),
            ),
          )
          as _i2.DatabaseConnection);

  @override
  _i2.SqlTypes get typeMapping =>
      (super.noSuchMethod(
            Invocation.getter(#typeMapping),
            returnValue: _i6.dummyValue<_i2.SqlTypes>(
              this,
              Invocation.getter(#typeMapping),
            ),
          )
          as _i2.SqlTypes);

  @override
  _i2.QueryExecutor get executor =>
      (super.noSuchMethod(
            Invocation.getter(#executor),
            returnValue: _FakeQueryExecutor_16(
              this,
              Invocation.getter(#executor),
            ),
          )
          as _i2.QueryExecutor);

  @override
  _i4.StreamQueryStore get streamQueries =>
      (super.noSuchMethod(
            Invocation.getter(#streamQueries),
            returnValue: _FakeStreamQueryStore_17(
              this,
              Invocation.getter(#streamQueries),
            ),
          )
          as _i4.StreamQueryStore);

  @override
  _i2.DatabaseConnectionUser get resolvedEngine =>
      (super.noSuchMethod(
            Invocation.getter(#resolvedEngine),
            returnValue: _FakeDatabaseConnectionUser_18(
              this,
              Invocation.getter(#resolvedEngine),
            ),
          )
          as _i2.DatabaseConnectionUser);

  @override
  _i5.Stream<List<_i3.Pet>> getAllPets() =>
      (super.noSuchMethod(
            Invocation.method(#getAllPets, []),
            returnValue: _i5.Stream<List<_i3.Pet>>.empty(),
          )
          as _i5.Stream<List<_i3.Pet>>);

  @override
  _i5.Future<_i3.Pet?> getPet(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getPet, [id]),
            returnValue: _i5.Future<_i3.Pet?>.value(),
          )
          as _i5.Future<_i3.Pet?>);

  @override
  _i5.Stream<_i3.Pet?> watchPet(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#watchPet, [id]),
            returnValue: _i5.Stream<_i3.Pet?>.empty(),
          )
          as _i5.Stream<_i3.Pet?>);

  @override
  _i5.Future<_i3.Pet?> createPet(
    String? name,
    int? speciesId,
    String? breed,
    String? colour,
    _i7.PetSex? sex,
    int? age,
    DateTime? dob,
    bool? dobEstimate,
    bool? dobCalculated,
    String? diet,
    String? notes,
    String? history,
    bool? isNeutered,
    DateTime? neuterDate,
    _i8.PetStatus? status,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createPet, [
              name,
              speciesId,
              breed,
              colour,
              sex,
              age,
              dob,
              dobEstimate,
              dobCalculated,
              diet,
              notes,
              history,
              isNeutered,
              neuterDate,
              status,
            ]),
            returnValue: _i5.Future<_i3.Pet?>.value(),
          )
          as _i5.Future<_i3.Pet?>);

  @override
  _i5.Future<int> updatePet(
    int? id,
    String? name,
    int? speciesId,
    String? breed,
    String? colour,
    _i7.PetSex? sex,
    int? age,
    DateTime? dob,
    bool? dobEstimate,
    bool? dobCalculated,
    String? diet,
    String? notes,
    String? history,
    bool? isNeutered,
    DateTime? neuterDate,
    _i8.PetStatus? status,
    DateTime? statusDate,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePet, [
              id,
              name,
              speciesId,
              breed,
              colour,
              sex,
              age,
              dob,
              dobEstimate,
              dobCalculated,
              diet,
              notes,
              history,
              isNeutered,
              neuterDate,
              status,
              statusDate,
            ]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> deletePet(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deletePet, [id]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Stream<List<_i3.PetMed>> getAllPetMedsForPet(int? petId) =>
      (super.noSuchMethod(
            Invocation.method(#getAllPetMedsForPet, [petId]),
            returnValue: _i5.Stream<List<_i3.PetMed>>.empty(),
          )
          as _i5.Stream<List<_i3.PetMed>>);

  @override
  _i5.Future<_i3.PetMed?> getPetMed(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getPetMed, [id]),
            returnValue: _i5.Future<_i3.PetMed?>.value(),
          )
          as _i5.Future<_i3.PetMed?>);

  @override
  _i5.Stream<_i3.PetMed?> watchPetMed(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#watchPetMed, [id]),
            returnValue: _i5.Stream<_i3.PetMed?>.empty(),
          )
          as _i5.Stream<_i3.PetMed?>);

  @override
  _i5.Future<_i3.PetMed?> createPetMed(
    int? petId,
    String? name,
    String? dose,
    DateTime? startDate,
    DateTime? endDate,
    String? notes,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createPetMed, [
              petId,
              name,
              dose,
              startDate,
              endDate,
              notes,
            ]),
            returnValue: _i5.Future<_i3.PetMed?>.value(),
          )
          as _i5.Future<_i3.PetMed?>);

  @override
  _i5.Future<int> updatePetMed(
    int? id,
    String? name,
    String? dose,
    DateTime? startDate,
    DateTime? endDate,
    String? notes,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePetMed, [
              id,
              name,
              dose,
              startDate,
              endDate,
              notes,
            ]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> deletePetMed(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deletePetMed, [id]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Stream<List<_i3.PetWeight>> getAllPetWeightsForPet(int? petId) =>
      (super.noSuchMethod(
            Invocation.method(#getAllPetWeightsForPet, [petId]),
            returnValue: _i5.Stream<List<_i3.PetWeight>>.empty(),
          )
          as _i5.Stream<List<_i3.PetWeight>>);

  @override
  _i5.Future<_i3.PetWeight?> getPetWeight(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getPetWeight, [id]),
            returnValue: _i5.Future<_i3.PetWeight?>.value(),
          )
          as _i5.Future<_i3.PetWeight?>);

  @override
  _i5.Stream<_i3.PetWeight?> watchPetWeight(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#watchPetWeight, [id]),
            returnValue: _i5.Stream<_i3.PetWeight?>.empty(),
          )
          as _i5.Stream<_i3.PetWeight?>);

  @override
  _i5.Future<_i3.PetWeight?> createPetWeight(
    int? petId,
    DateTime? date,
    double? weight,
    _i9.WeightUnits? weightUnit,
    String? notes,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createPetWeight, [
              petId,
              date,
              weight,
              weightUnit,
              notes,
            ]),
            returnValue: _i5.Future<_i3.PetWeight?>.value(),
          )
          as _i5.Future<_i3.PetWeight?>);

  @override
  _i5.Future<int> updatePetWeight(
    int? id,
    DateTime? date,
    double? weight,
    _i9.WeightUnits? weightUnit,
    String? notes,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updatePetWeight, [
              id,
              date,
              weight,
              weightUnit,
              notes,
            ]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> deletePetWeight(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deletePetWeight, [id]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Stream<List<_i3.PetVaccination>> getAllPetVaccinationsForPet(
    int? petId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getAllPetVaccinationsForPet, [petId]),
            returnValue: _i5.Stream<List<_i3.PetVaccination>>.empty(),
          )
          as _i5.Stream<List<_i3.PetVaccination>>);

  @override
  _i5.Future<_i3.PetVaccination?> getPetVaccination(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getPetVaccination, [id]),
            returnValue: _i5.Future<_i3.PetVaccination?>.value(),
          )
          as _i5.Future<_i3.PetVaccination?>);

  @override
  _i5.Stream<_i3.PetVaccination?> watchPetVaccination(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#watchPetVaccination, [id]),
            returnValue: _i5.Stream<_i3.PetVaccination?>.empty(),
          )
          as _i5.Stream<_i3.PetVaccination?>);

  @override
  _i5.Future<_i3.PetVaccination?> createPetVaccination({
    required int? petId,
    required String? name,
    required DateTime? administeredDate,
    required DateTime? expiryDate,
    DateTime? reminderDate,
    String? notes,
    required String? vaccineBatchNumber,
    required String? vaccineManufacturer,
    required String? administeredBy,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createPetVaccination, [], {
              #petId: petId,
              #name: name,
              #administeredDate: administeredDate,
              #expiryDate: expiryDate,
              #reminderDate: reminderDate,
              #notes: notes,
              #vaccineBatchNumber: vaccineBatchNumber,
              #vaccineManufacturer: vaccineManufacturer,
              #administeredBy: administeredBy,
            }),
            returnValue: _i5.Future<_i3.PetVaccination?>.value(),
          )
          as _i5.Future<_i3.PetVaccination?>);

  @override
  _i5.Future<int> updatePetVaccination({
    required int? id,
    required String? name,
    required DateTime? administeredDate,
    required DateTime? expiryDate,
    required DateTime? reminderDate,
    String? notes,
    required String? vaccineBatchNumber,
    required String? vaccineManufacturer,
    required String? administeredBy,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updatePetVaccination, [], {
              #id: id,
              #name: name,
              #administeredDate: administeredDate,
              #expiryDate: expiryDate,
              #reminderDate: reminderDate,
              #notes: notes,
              #vaccineBatchNumber: vaccineBatchNumber,
              #vaccineManufacturer: vaccineManufacturer,
              #administeredBy: administeredBy,
            }),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> deletePetVaccination(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deletePetVaccination, [id]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Stream<List<_i3.PetMicrochip>> getAllPetMicrochipsForPet(int? petId) =>
      (super.noSuchMethod(
            Invocation.method(#getAllPetMicrochipsForPet, [petId]),
            returnValue: _i5.Stream<List<_i3.PetMicrochip>>.empty(),
          )
          as _i5.Stream<List<_i3.PetMicrochip>>);

  @override
  _i5.Future<_i3.PetMicrochip?> getPetMicrochip(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getPetMicrochip, [id]),
            returnValue: _i5.Future<_i3.PetMicrochip?>.value(),
          )
          as _i5.Future<_i3.PetMicrochip?>);

  @override
  _i5.Stream<_i3.PetMicrochip?> watchPetMicrochip(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#watchPetMicrochip, [id]),
            returnValue: _i5.Stream<_i3.PetMicrochip?>.empty(),
          )
          as _i5.Stream<_i3.PetMicrochip?>);

  @override
  _i5.Future<_i3.PetMicrochip?> createPetMicrochip({
    required int? petId,
    bool? isMicrochipped,
    DateTime? microchipDate,
    String? microchipNotes,
    String? microchipNumber,
    String? microchipCompany,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createPetMicrochip, [], {
              #petId: petId,
              #isMicrochipped: isMicrochipped,
              #microchipDate: microchipDate,
              #microchipNotes: microchipNotes,
              #microchipNumber: microchipNumber,
              #microchipCompany: microchipCompany,
            }),
            returnValue: _i5.Future<_i3.PetMicrochip?>.value(),
          )
          as _i5.Future<_i3.PetMicrochip?>);

  @override
  _i5.Future<int> updatePetMicrochip({
    required int? id,
    bool? isMicrochipped,
    DateTime? microchipDate,
    String? microchipNotes,
    String? microchipNumber,
    String? microchipCompany,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updatePetMicrochip, [], {
              #id: id,
              #isMicrochipped: isMicrochipped,
              #microchipDate: microchipDate,
              #microchipNotes: microchipNotes,
              #microchipNumber: microchipNumber,
              #microchipCompany: microchipCompany,
            }),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> deletePetMicrochip(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deletePetMicrochip, [id]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<_i3.JournalEntry?> createJournalEntryForPet({
    required int? petId,
    required String? entryText,
    required DateTime? entryDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createJournalEntryForPet, [], {
              #petId: petId,
              #entryText: entryText,
              #entryDate: entryDate,
            }),
            returnValue: _i5.Future<_i3.JournalEntry?>.value(),
          )
          as _i5.Future<_i3.JournalEntry?>);

  @override
  _i5.Future<_i3.JournalEntry?> getJournalEntry(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getJournalEntry, [id]),
            returnValue: _i5.Future<_i3.JournalEntry?>.value(),
          )
          as _i5.Future<_i3.JournalEntry?>);

  @override
  _i5.Stream<_i3.JournalEntry?> watchJournalEntry(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#watchJournalEntry, [id]),
            returnValue: _i5.Stream<_i3.JournalEntry?>.empty(),
          )
          as _i5.Stream<_i3.JournalEntry?>);

  @override
  _i5.Stream<List<_i3.JournalEntry>> getAllJournalEntriesForPet(int? petId) =>
      (super.noSuchMethod(
            Invocation.method(#getAllJournalEntriesForPet, [petId]),
            returnValue: _i5.Stream<List<_i3.JournalEntry>>.empty(),
          )
          as _i5.Stream<List<_i3.JournalEntry>>);

  @override
  _i5.Future<int> updateJournalEntry({
    required int? id,
    String? entryText,
    DateTime? entryDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateJournalEntry, [], {
              #id: id,
              #entryText: entryText,
              #entryDate: entryDate,
            }),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> deleteJournalEntry(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteJournalEntry, [id]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<_i3.JournalEntryTag?> createJournalEntryTag({
    required int? journalEntryId,
    required String? tag,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createJournalEntryTag, [], {
              #journalEntryId: journalEntryId,
              #tag: tag,
            }),
            returnValue: _i5.Future<_i3.JournalEntryTag?>.value(),
          )
          as _i5.Future<_i3.JournalEntryTag?>);

  @override
  _i5.Stream<List<_i3.JournalEntryTag>> getAllJournalEntryTagsForEntry(
    int? journalEntryId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getAllJournalEntryTagsForEntry, [
              journalEntryId,
            ]),
            returnValue: _i5.Stream<List<_i3.JournalEntryTag>>.empty(),
          )
          as _i5.Stream<List<_i3.JournalEntryTag>>);

  @override
  _i5.Future<int> deleteJournalEntryTag(int? journalEntryTagId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteJournalEntryTag, [journalEntryTagId]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Stream<List<_i3.SpeciesType>> getAllSpeciesTypes() =>
      (super.noSuchMethod(
            Invocation.method(#getAllSpeciesTypes, []),
            returnValue: _i5.Stream<List<_i3.SpeciesType>>.empty(),
          )
          as _i5.Stream<List<_i3.SpeciesType>>);

  @override
  _i5.Future<_i3.SpeciesType?> getSpeciesType(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getSpeciesType, [id]),
            returnValue: _i5.Future<_i3.SpeciesType?>.value(),
          )
          as _i5.Future<_i3.SpeciesType?>);

  @override
  _i5.Stream<_i3.SpeciesType?> watchSpeciesType(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#watchSpeciesType, [id]),
            returnValue: _i5.Stream<_i3.SpeciesType?>.empty(),
          )
          as _i5.Stream<_i3.SpeciesType?>);

  @override
  _i5.Future<_i3.SpeciesType?> createSpeciesType({
    required String? name,
    required bool? userAdded,
    int? speciesId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createSpeciesType, [], {
              #name: name,
              #userAdded: userAdded,
              #speciesId: speciesId,
            }),
            returnValue: _i5.Future<_i3.SpeciesType?>.value(),
          )
          as _i5.Future<_i3.SpeciesType?>);

  @override
  _i5.Future<int> updateSpeciesType({
    required int? id,
    required String? name,
    required bool? userAdded,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateSpeciesType, [], {
              #id: id,
              #name: name,
              #userAdded: userAdded,
            }),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> deleteSpeciesType(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteSpeciesType, [id]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<_i3.Setting?> getSettings() =>
      (super.noSuchMethod(
            Invocation.method(#getSettings, []),
            returnValue: _i5.Future<_i3.Setting?>.value(),
          )
          as _i5.Future<_i3.Setting?>);

  @override
  _i5.Stream<_i3.Setting?> watchSettings() =>
      (super.noSuchMethod(
            Invocation.method(#watchSettings, []),
            returnValue: _i5.Stream<_i3.Setting?>.empty(),
          )
          as _i5.Stream<_i3.Setting?>);

  @override
  _i5.Future<_i3.Setting> createDefaultSettings() =>
      (super.noSuchMethod(
            Invocation.method(#createDefaultSettings, []),
            returnValue: _i5.Future<_i3.Setting>.value(
              _FakeSetting_19(
                this,
                Invocation.method(#createDefaultSettings, []),
              ),
            ),
          )
          as _i5.Future<_i3.Setting>);

  @override
  _i5.Future<int> saveSettingsOnboarding(
    bool? acceptedTermsAndConditions,
    bool? optIntoAnalyticsWarning,
    bool? onBoardingComplete,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveSettingsOnboarding, [
              acceptedTermsAndConditions,
              optIntoAnalyticsWarning,
              onBoardingComplete,
            ]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> saveSettingsUser(
    _i9.WeightUnits? defaultWeightUnit,
    bool? optIntoAnalyticsWarning,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveSettingsUser, [
              defaultWeightUnit,
              optIntoAnalyticsWarning,
            ]),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> resetSettingsUser() =>
      (super.noSuchMethod(
            Invocation.method(#resetSettingsUser, []),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<bool> testConnection() =>
      (super.noSuchMethod(
            Invocation.method(#testConnection, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<void> clearAllData() =>
      (super.noSuchMethod(
            Invocation.method(#clearAllData, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> populateSpeciesTypes() =>
      (super.noSuchMethod(
            Invocation.method(#populateSpeciesTypes, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> populateTestData() =>
      (super.noSuchMethod(
            Invocation.method(#populateTestData, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i2.Migrator createMigrator() =>
      (super.noSuchMethod(
            Invocation.method(#createMigrator, []),
            returnValue: _FakeMigrator_20(
              this,
              Invocation.method(#createMigrator, []),
            ),
          )
          as _i2.Migrator);

  @override
  _i5.Future<void> beforeOpen(
    _i2.QueryExecutor? executor,
    _i2.OpeningDetails? details,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#beforeOpen, [executor, details]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Stream<T> createStream<T extends Object>(
    _i4.QueryStreamFetcher<T>? stmt,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createStream, [stmt]),
            returnValue: _i5.Stream<T>.empty(),
          )
          as _i5.Stream<T>);

  @override
  T alias<T, D>(_i2.ResultSetImplementation<T, D>? table, String? alias) =>
      (super.noSuchMethod(
            Invocation.method(#alias, [table, alias]),
            returnValue: _i6.dummyValue<T>(
              this,
              Invocation.method(#alias, [table, alias]),
            ),
          )
          as T);

  @override
  void markTablesUpdated(Iterable<_i2.TableInfo<_i2.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(#markTablesUpdated, [tables]),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i2.TableUpdate>? updates) => super.noSuchMethod(
    Invocation.method(#notifyUpdates, [updates]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Stream<Set<_i2.TableUpdate>> tableUpdates([
    _i2.TableUpdateQuery? query = const _i2.TableUpdateQuery.any(),
  ]) =>
      (super.noSuchMethod(
            Invocation.method(#tableUpdates, [query]),
            returnValue: _i5.Stream<Set<_i2.TableUpdate>>.empty(),
          )
          as _i5.Stream<Set<_i2.TableUpdate>>);

  @override
  _i5.Future<T> doWhenOpened<T>(
    _i5.FutureOr<T> Function(_i2.QueryExecutor)? fn,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#doWhenOpened, [fn]),
            returnValue:
                _i6.ifNotNull(
                  _i6.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#doWhenOpened, [fn]),
                  ),
                  (T v) => _i5.Future<T>.value(v),
                ) ??
                _FakeFuture_21<T>(this, Invocation.method(#doWhenOpened, [fn])),
          )
          as _i5.Future<T>);

  @override
  _i2.InsertStatement<T, D> into<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#into, [table]),
            returnValue: _FakeInsertStatement_22<T, D>(
              this,
              Invocation.method(#into, [table]),
            ),
          )
          as _i2.InsertStatement<T, D>);

  @override
  _i2.UpdateStatement<Tbl, R> update<Tbl extends _i2.Table, R>(
    _i2.TableInfo<Tbl, R>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#update, [table]),
            returnValue: _FakeUpdateStatement_23<Tbl, R>(
              this,
              Invocation.method(#update, [table]),
            ),
          )
          as _i2.UpdateStatement<Tbl, R>);

  @override
  _i2.SimpleSelectStatement<T, R> select<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#select, [table], {#distinct: distinct}),
            returnValue: _FakeSimpleSelectStatement_24<T, R>(
              this,
              Invocation.method(#select, [table], {#distinct: distinct}),
            ),
          )
          as _i2.SimpleSelectStatement<T, R>);

  @override
  _i2.JoinedSelectStatement<T, R> selectOnly<T extends _i2.HasResultSet, R>(
    _i2.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            returnValue: _FakeJoinedSelectStatement_25<T, R>(
              this,
              Invocation.method(#selectOnly, [table], {#distinct: distinct}),
            ),
          )
          as _i2.JoinedSelectStatement<T, R>);

  @override
  _i2.BaseSelectStatement<_i2.TypedResult> selectExpressions(
    Iterable<_i2.Expression<Object>>? columns,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#selectExpressions, [columns]),
            returnValue: _FakeBaseSelectStatement_26<_i2.TypedResult>(
              this,
              Invocation.method(#selectExpressions, [columns]),
            ),
          )
          as _i2.BaseSelectStatement<_i2.TypedResult>);

  @override
  _i2.DeleteStatement<T, D> delete<T extends _i2.Table, D>(
    _i2.TableInfo<T, D>? table,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [table]),
            returnValue: _FakeDeleteStatement_27<T, D>(
              this,
              Invocation.method(#delete, [table]),
            ),
          )
          as _i2.DeleteStatement<T, D>);

  @override
  _i5.Future<int> customUpdate(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customUpdate,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<int> customInsert(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customInsert,
              [query],
              {#variables: variables, #updates: updates},
            ),
            returnValue: _i5.Future<int>.value(0),
          )
          as _i5.Future<int>);

  @override
  _i5.Future<List<_i2.QueryRow>> customWriteReturning(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? updates,
    _i2.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customWriteReturning,
              [query],
              {
                #variables: variables,
                #updates: updates,
                #updateKind: updateKind,
              },
            ),
            returnValue: _i5.Future<List<_i2.QueryRow>>.value(<_i2.QueryRow>[]),
          )
          as _i5.Future<List<_i2.QueryRow>>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelect(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelect,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_28<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelect,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i2.Selectable<_i2.QueryRow> customSelectQuery(
    String? query, {
    List<_i2.Variable<Object>>? variables = const [],
    Set<_i2.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #customSelectQuery,
              [query],
              {#variables: variables, #readsFrom: readsFrom},
            ),
            returnValue: _FakeSelectable_28<_i2.QueryRow>(
              this,
              Invocation.method(
                #customSelectQuery,
                [query],
                {#variables: variables, #readsFrom: readsFrom},
              ),
            ),
          )
          as _i2.Selectable<_i2.QueryRow>);

  @override
  _i5.Future<void> customStatement(String? statement, [List<dynamic>? args]) =>
      (super.noSuchMethod(
            Invocation.method(#customStatement, [statement, args]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<T> transaction<T>(
    _i5.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #transaction,
              [action],
              {#requireNew: requireNew},
            ),
            returnValue:
                _i6.ifNotNull(
                  _i6.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #transaction,
                      [action],
                      {#requireNew: requireNew},
                    ),
                  ),
                  (T v) => _i5.Future<T>.value(v),
                ) ??
                _FakeFuture_21<T>(
                  this,
                  Invocation.method(
                    #transaction,
                    [action],
                    {#requireNew: requireNew},
                  ),
                ),
          )
          as _i5.Future<T>);

  @override
  _i5.Future<T> exclusively<T>(_i5.Future<T> Function()? action) =>
      (super.noSuchMethod(
            Invocation.method(#exclusively, [action]),
            returnValue:
                _i6.ifNotNull(
                  _i6.dummyValueOrNull<T>(
                    this,
                    Invocation.method(#exclusively, [action]),
                  ),
                  (T v) => _i5.Future<T>.value(v),
                ) ??
                _FakeFuture_21<T>(
                  this,
                  Invocation.method(#exclusively, [action]),
                ),
          )
          as _i5.Future<T>);

  @override
  _i5.Future<void> batch(_i5.FutureOr<void> Function(_i2.Batch)? runInBatch) =>
      (super.noSuchMethod(
            Invocation.method(#batch, [runInBatch]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<T> runWithInterceptor<T>(
    _i5.Future<T> Function()? action, {
    required _i2.QueryInterceptor? interceptor,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #runWithInterceptor,
              [action],
              {#interceptor: interceptor},
            ),
            returnValue:
                _i6.ifNotNull(
                  _i6.dummyValueOrNull<T>(
                    this,
                    Invocation.method(
                      #runWithInterceptor,
                      [action],
                      {#interceptor: interceptor},
                    ),
                  ),
                  (T v) => _i5.Future<T>.value(v),
                ) ??
                _FakeFuture_21<T>(
                  this,
                  Invocation.method(
                    #runWithInterceptor,
                    [action],
                    {#interceptor: interceptor},
                  ),
                ),
          )
          as _i5.Future<T>);

  @override
  _i2.GenerationContext $write(
    _i2.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$write,
              [component],
              {#hasMultipleTables: hasMultipleTables, #startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_29(
              this,
              Invocation.method(
                #$write,
                [component],
                {
                  #hasMultipleTables: hasMultipleTables,
                  #startIndex: startIndex,
                },
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  _i2.GenerationContext $writeInsertable(
    _i2.TableInfo<_i2.Table, dynamic>? table,
    _i2.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #$writeInsertable,
              [table, insertable],
              {#startIndex: startIndex},
            ),
            returnValue: _FakeGenerationContext_29(
              this,
              Invocation.method(
                #$writeInsertable,
                [table, insertable],
                {#startIndex: startIndex},
              ),
            ),
          )
          as _i2.GenerationContext);

  @override
  String $expandVar(int? start, int? amount) =>
      (super.noSuchMethod(
            Invocation.method(#$expandVar, [start, amount]),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.method(#$expandVar, [start, amount]),
            ),
          )
          as String);
}
